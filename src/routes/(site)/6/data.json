[
  {
    "id": 643,
    "url": "/blog/643",
    "discussionURL": "https://github.com/EthanThatOneKid/acmcsuf.com/discussions/643",
    "title": "Dev Portfolio Project Final Part - Experiences & Projects",
    "html": "<h1 dir=\"auto\">Introduction <g-emoji class=\"g-emoji\" alias=\"partying_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f973.png\">🥳</g-emoji></h1>\n<ul dir=\"auto\">\n<li>In this blog, we'll guide you to create the last 2 components: Experiences and Projects for our portfolio website and it looks something like this</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/198735898-fd187cd5-a778-4e39-8a25-a2042436e771.png\"><img width=\"600\" alt=\"Screen Shot 2022-10-28 at 2 28 24 PM\" src=\"https://user-images.githubusercontent.com/58461444/198735898-fd187cd5-a778-4e39-8a25-a2042436e771.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/198735921-7cdbfc80-fec2-4446-85ef-8d694c0cb636.png\"><img width=\"600\" alt=\"Screen Shot 2022-10-28 at 2 28 38 PM\" src=\"https://user-images.githubusercontent.com/58461444/198735921-7cdbfc80-fec2-4446-85ef-8d694c0cb636.png\" style=\"max-width: 100%;\"></a></p>\n<h1 dir=\"auto\">What'll be covered in this blog <g-emoji class=\"g-emoji\" alias=\"nerd_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f913.png\">🤓</g-emoji></h1>\n<ul dir=\"auto\">\n<li>#each loop in Svelte ( we've learned this in part 2 )</li>\n</ul>\n<h1 dir=\"auto\">Let's start <g-emoji class=\"g-emoji\" alias=\"robot\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f916.png\">🤖</g-emoji></h1>\n<h2 dir=\"auto\">Create Experiences + Projects  components</h2>\n<ul dir=\"auto\">\n<li>Similar to what we did in previous parts, we'll create  <code class=\"notranslate\">Experiences.svelte</code> and <code class=\"notranslate\">Projects.svelte</code>  in our components folder</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/198736292-379ae7f0-471d-470b-8bb0-27a7af48af7e.png\"><img width=\"310\" alt=\"Screen Shot 2022-10-28 at 2 31 46 PM\" src=\"https://user-images.githubusercontent.com/58461444/198736292-379ae7f0-471d-470b-8bb0-27a7af48af7e.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">NOTE: Don't forget to import our component in <code class=\"notranslate\">App.svelte</code> - our main Svelte file</p>\n<blockquote>\n<p dir=\"auto\">App.svelte</p>\n</blockquote>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n  import About from &quot;./components/About.svelte&quot;;\n  import Experiences from &quot;./components/Experiences.svelte&quot;;\n  import NavBar from &quot;./components/NavBar.svelte&quot;;\n  import Projects from &quot;./components/Projects.svelte&quot;;\n&lt;/script&gt;\n\n&lt;main&gt;\n  &lt;NavBar /&gt;\n  &lt;div&gt;\n    &lt;About name={&quot;Frank&quot;} /&gt;\n    &lt;Experiences /&gt;\n    &lt;Projects /&gt;\n  &lt;/div&gt;\n&lt;/main&gt;\n\n&lt;style&gt;\n  main {\n    margin: 1rem;\n    font-size: 1.25rem;\n  }\n&lt;/style&gt;\"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n  import About from \"./components/About.svelte\";\n  import Experiences from \"./components/Experiences.svelte\";\n  import NavBar from \"./components/NavBar.svelte\";\n  import Projects from \"./components/Projects.svelte\";\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">main</span>&gt;\n  &lt;<span class=\"pl-c1\">NavBar</span> /&gt;\n  &lt;<span class=\"pl-ent\">div</span>&gt;\n    &lt;<span class=\"pl-c1\">About</span> <span class=\"pl-e\">name</span>=<span class=\"pl-pse\">{</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Frank<span class=\"pl-pds\">\"</span></span><span class=\"pl-pse\">}</span> /&gt;\n    &lt;<span class=\"pl-c1\">Experiences</span> /&gt;\n    &lt;<span class=\"pl-c1\">Projects</span> /&gt;\n  &lt;/<span class=\"pl-ent\">div</span>&gt;\n&lt;/<span class=\"pl-ent\">main</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n  main {\n    margin: 1rem;\n    font-size: 1.25rem;\n  }\n&lt;/<span class=\"pl-ent\">style</span>&gt;</pre></div>\n<h2 dir=\"auto\">Experiences Component</h2>\n<ul dir=\"auto\">\n<li>Similar to what we did in NavBar.svelte, we'll also create a JavaScript Array of Objects to hold our data and then use Svelte #each loop to render them to our browser</li>\n</ul>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n  const exps = [\n    {\n      title: &quot;Shark Gang Lead&quot;,\n      duration: &quot;Jan 2022 - Present&quot;,\n    },\n    {\n      title: &quot;Vegan Shark&quot;,\n      duration: &quot;Jan 2021 - Jan 2022&quot;,\n    },\n    {\n      title: &quot;Junior Shark&quot;,\n      duration: &quot;Jan 2020 - Jan 2021&quot;,\n    },\n    {\n      title: &quot;Baby Shark&quot;,\n      duration: &quot;Jan 2019 - Jan 2020&quot;,\n    },\n  ];\n&lt;/script&gt;\n\n&lt;section class=&quot;container__exps&quot; id=&quot;Experiences&quot;&gt;\n  &lt;p class=&quot;header--big&quot;&gt;Experiences&lt;/p&gt;\n  {#each exps as { title, duration }}\n    &lt;div class=&quot;container__exp&quot;&gt;\n      &lt;p class=&quot;header__title&quot;&gt;{title}&lt;/p&gt;\n      &lt;p class=&quot;header__duration&quot;&gt;{duration}&lt;/p&gt;\n    &lt;/div&gt;\n  {/each}\n&lt;/section&gt;\n\n&lt;style&gt;\n  .container__exps {\n    margin-top: 10rem;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .header--big {\n    font-size: 2.5rem;\n    font-weight: 780;\n  }\n  .container__exp {\n    background-color: #2C91C6;\n    border-radius: 2rem;\n    margin: 1rem;\n  }\n  .header__title {\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n&lt;/style&gt;\"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n  const exps = [\n    {\n      title: \"Shark Gang Lead\",\n      duration: \"Jan 2022 - Present\",\n    },\n    {\n      title: \"Vegan Shark\",\n      duration: \"Jan 2021 - Jan 2022\",\n    },\n    {\n      title: \"Junior Shark\",\n      duration: \"Jan 2020 - Jan 2021\",\n    },\n    {\n      title: \"Baby Shark\",\n      duration: \"Jan 2019 - Jan 2020\",\n    },\n  ];\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">section</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__exps<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Experiences<span class=\"pl-pds\">\"</span></span>&gt;\n  &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header--big<span class=\"pl-pds\">\"</span></span>&gt;Experiences&lt;/<span class=\"pl-ent\">p</span>&gt;\n  {#<span class=\"pl-k\">each</span> <span class=\"pl-smi\">exps</span> <span class=\"pl-k\">as</span> { title, duration }}\n    &lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__exp<span class=\"pl-pds\">\"</span></span>&gt;\n      &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header__title<span class=\"pl-pds\">\"</span></span>&gt;<span class=\"pl-pse\">{</span><span class=\"pl-smi\">title</span><span class=\"pl-pse\">}</span>&lt;/<span class=\"pl-ent\">p</span>&gt;\n      &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header__duration<span class=\"pl-pds\">\"</span></span>&gt;<span class=\"pl-pse\">{</span><span class=\"pl-smi\">duration</span><span class=\"pl-pse\">}</span>&lt;/<span class=\"pl-ent\">p</span>&gt;\n    &lt;/<span class=\"pl-ent\">div</span>&gt;\n  {/<span class=\"pl-k\">each</span>}\n&lt;/<span class=\"pl-ent\">section</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n  .container__exps {\n    margin-top: 10rem;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .header--big {\n    font-size: 2.5rem;\n    font-weight: 780;\n  }\n  .container__exp {\n    background-color: #2C91C6;\n    border-radius: 2rem;\n    margin: 1rem;\n  }\n  .header__title {\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n&lt;/<span class=\"pl-ent\">style</span>&gt;</pre></div>\n<h2 dir=\"auto\">SCROLLING EFFECT</h2>\n<h2 dir=\"auto\">Notice that we set the <code class=\"notranslate\">id=\"Experiences\"</code> for our <code class=\"notranslate\">&lt;section&gt;</code> since we want the scrolling animation that whenever we click an item on our <strong>Navbar</strong> it'll scroll to the section with the matching id, let's recall our Navbar code for this:</h2>\n<blockquote>\n<p dir=\"auto\">NavBar.svelte</p>\n</blockquote>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  const navItems = [\n    { title: &quot;About&quot;, url: &quot;#About&quot; }, // Scroll to section with id About\n    { title: &quot;Experiences&quot;, url: &quot;#Experiences&quot; }, // Scroll to section with id Experiences\n    { title: &quot;Projects&quot;, url: &quot;#Projects&quot; }, // Scroll to section with id Projects\n  ];\"><pre>  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">navItems</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">\"About\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">url</span>: <span class=\"pl-s\">\"#About\"</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Scroll to section with id About</span>\n    <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">\"Experiences\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">url</span>: <span class=\"pl-s\">\"#Experiences\"</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Scroll to section with id Experiences</span>\n    <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">title</span>: <span class=\"pl-s\">\"Projects\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">url</span>: <span class=\"pl-s\">\"#Projects\"</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c\">// Scroll to section with id Projects</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">And we also need to add a little bit of CSS to make the scrolling become smoother</p>\n<blockquote>\n<p dir=\"auto\">app.css</p>\n</blockquote>\n<div class=\"highlight highlight-source-css notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"html {\n  scroll-behavior: smooth;\n}\"><pre><span class=\"pl-ent\">html</span> {\n  <span class=\"pl-c1\">scroll-behavior</span><span class=\"pl-kos\">:</span> smooth;\n}</pre></div>\n<h2 dir=\"auto\">Projects Component</h2>\n<ul dir=\"auto\">\n<li>Similar to what we did in Experiences.svelte, we'll also create a JavaScript Array of Objects to hold our data and then use Svelte #each loop to render them to our browser</li>\n</ul>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n  const projects = [\n    {\n      title: &quot;acmcsuf.com&quot;,\n      description: &quot;Developed acmcsuf.com website&quot;,\n      url: &quot;https://github.com/EthanThatOneKid/acmcsuf.com&quot;,\n    },\n    {\n      title: &quot;Intro to Web Dev&quot;,\n      description: &quot;Beginner friendly Web Dev series by acmDev&quot;,\n      url: &quot;https://github.com/acmCSUFDev/intro-to-web-dev&quot;,\n    },\n    {\n      title: &quot;ICON&quot;,\n      description: &quot;Notion Canvas integration for students&quot;,\n      url: &quot;https://github.com/acmCSUFDev/ICON&quot;,\n    },\n    {\n      title: &quot;Food Tinder&quot;,\n      description: &quot;tinder for matching people by food places&quot;,\n      url: &quot;https://github.com/acmCSUFDev/Food-Tinder&quot;,\n    },\n  ];\n&lt;/script&gt;\n\n&lt;section class=&quot;container__projects&quot; id=&quot;Projects&quot;&gt;\n  &lt;p class=&quot;header--big&quot;&gt;Projects&lt;/p&gt;\n  {#each projects as { title, description, url }}\n    &lt;div class=&quot;container__project&quot;&gt;\n      &lt;a href={url} target=&quot;_blank&quot;&gt;\n        &lt;p class=&quot;header__title&quot;&gt;{title}&lt;/p&gt;\n      &lt;/a&gt;\n      &lt;p&gt;{description}&lt;/p&gt;\n    &lt;/div&gt;\n  {/each}\n&lt;/section&gt;\n\n&lt;style&gt;\n  .container__projects {\n    margin-top: 10rem;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .header--big {\n    font-size: 2.5rem;\n    font-weight: 780;\n  }\n  .container__project {\n    margin: 1rem;\n  }\n  .header__title {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: 600;\n    transition: 400ms all;\n  }\n  .header__title:hover {\n    color: #2c91c6;\n  }\n&lt;/style&gt;\"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n  const projects = [\n    {\n      title: \"acmcsuf.com\",\n      description: \"Developed acmcsuf.com website\",\n      url: \"https://github.com/EthanThatOneKid/acmcsuf.com\",\n    },\n    {\n      title: \"Intro to Web Dev\",\n      description: \"Beginner friendly Web Dev series by acmDev\",\n      url: \"https://github.com/acmCSUFDev/intro-to-web-dev\",\n    },\n    {\n      title: \"ICON\",\n      description: \"Notion Canvas integration for students\",\n      url: \"https://github.com/acmCSUFDev/ICON\",\n    },\n    {\n      title: \"Food Tinder\",\n      description: \"tinder for matching people by food places\",\n      url: \"https://github.com/acmCSUFDev/Food-Tinder\",\n    },\n  ];\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">section</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__projects<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Projects<span class=\"pl-pds\">\"</span></span>&gt;\n  &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header--big<span class=\"pl-pds\">\"</span></span>&gt;Projects&lt;/<span class=\"pl-ent\">p</span>&gt;\n  {#<span class=\"pl-k\">each</span> <span class=\"pl-smi\">projects</span> <span class=\"pl-k\">as</span> { title, description, url }}\n    &lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__project<span class=\"pl-pds\">\"</span></span>&gt;\n      &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-pse\">{</span><span class=\"pl-smi\">url</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">target</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_blank<span class=\"pl-pds\">\"</span></span>&gt;\n        &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header__title<span class=\"pl-pds\">\"</span></span>&gt;<span class=\"pl-pse\">{</span><span class=\"pl-smi\">title</span><span class=\"pl-pse\">}</span>&lt;/<span class=\"pl-ent\">p</span>&gt;\n      &lt;/<span class=\"pl-ent\">a</span>&gt;\n      &lt;<span class=\"pl-ent\">p</span>&gt;<span class=\"pl-pse\">{</span><span class=\"pl-smi\">description</span><span class=\"pl-pse\">}</span>&lt;/<span class=\"pl-ent\">p</span>&gt;\n    &lt;/<span class=\"pl-ent\">div</span>&gt;\n  {/<span class=\"pl-k\">each</span>}\n&lt;/<span class=\"pl-ent\">section</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n  .container__projects {\n    margin-top: 10rem;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .header--big {\n    font-size: 2.5rem;\n    font-weight: 780;\n  }\n  .container__project {\n    margin: 1rem;\n  }\n  .header__title {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: 600;\n    transition: 400ms all;\n  }\n  .header__title:hover {\n    color: #2c91c6;\n  }\n&lt;/<span class=\"pl-ent\">style</span>&gt;</pre></div>\n<h2 dir=\"auto\">Now, you've successfully built up a decent website <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji> <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji> You can always check the full code <a href=\"https://github.com/acmCSUFDev/intro-to-web-dev/tree/part-2-reference\">HERE</a></h2>\n<h2 dir=\"auto\">Let's see how're we going to deploy this in the next blog :D</h2>",
    "bodyText": "Introduction 🥳\n\nIn this blog, we'll guide you to create the last 2 components: Experiences and Projects for our portfolio website and it looks something like this\n\n\n\nWhat'll be covered in this blog 🤓\n\n#each loop in Svelte ( we've learned this in part 2 )\n\nLet's start 🤖\nCreate Experiences + Projects  components\n\nSimilar to what we did in previous parts, we'll create  Experiences.svelte and Projects.svelte  in our components folder\n\n\nNOTE: Don't forget to import our component in App.svelte - our main Svelte file\n\nApp.svelte\n\n<script>\n  import About from \"./components/About.svelte\";\n  import Experiences from \"./components/Experiences.svelte\";\n  import NavBar from \"./components/NavBar.svelte\";\n  import Projects from \"./components/Projects.svelte\";\n</script>\n\n<main>\n  <NavBar />\n  <div>\n    <About name={\"Frank\"} />\n    <Experiences />\n    <Projects />\n  </div>\n</main>\n\n<style>\n  main {\n    margin: 1rem;\n    font-size: 1.25rem;\n  }\n</style>\nExperiences Component\n\nSimilar to what we did in NavBar.svelte, we'll also create a JavaScript Array of Objects to hold our data and then use Svelte #each loop to render them to our browser\n\n<script>\n  const exps = [\n    {\n      title: \"Shark Gang Lead\",\n      duration: \"Jan 2022 - Present\",\n    },\n    {\n      title: \"Vegan Shark\",\n      duration: \"Jan 2021 - Jan 2022\",\n    },\n    {\n      title: \"Junior Shark\",\n      duration: \"Jan 2020 - Jan 2021\",\n    },\n    {\n      title: \"Baby Shark\",\n      duration: \"Jan 2019 - Jan 2020\",\n    },\n  ];\n</script>\n\n<section class=\"container__exps\" id=\"Experiences\">\n  <p class=\"header--big\">Experiences</p>\n  {#each exps as { title, duration }}\n    <div class=\"container__exp\">\n      <p class=\"header__title\">{title}</p>\n      <p class=\"header__duration\">{duration}</p>\n    </div>\n  {/each}\n</section>\n\n<style>\n  .container__exps {\n    margin-top: 10rem;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .header--big {\n    font-size: 2.5rem;\n    font-weight: 780;\n  }\n  .container__exp {\n    background-color: #2C91C6;\n    border-radius: 2rem;\n    margin: 1rem;\n  }\n  .header__title {\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n</style>\nSCROLLING EFFECT\nNotice that we set the id=\"Experiences\" for our <section> since we want the scrolling animation that whenever we click an item on our Navbar it'll scroll to the section with the matching id, let's recall our Navbar code for this:\n\nNavBar.svelte\n\n  const navItems = [\n    { title: \"About\", url: \"#About\" }, // Scroll to section with id About\n    { title: \"Experiences\", url: \"#Experiences\" }, // Scroll to section with id Experiences\n    { title: \"Projects\", url: \"#Projects\" }, // Scroll to section with id Projects\n  ];\nAnd we also need to add a little bit of CSS to make the scrolling become smoother\n\napp.css\n\nhtml {\n  scroll-behavior: smooth;\n}\nProjects Component\n\nSimilar to what we did in Experiences.svelte, we'll also create a JavaScript Array of Objects to hold our data and then use Svelte #each loop to render them to our browser\n\n<script>\n  const projects = [\n    {\n      title: \"acmcsuf.com\",\n      description: \"Developed acmcsuf.com website\",\n      url: \"https://github.com/EthanThatOneKid/acmcsuf.com\",\n    },\n    {\n      title: \"Intro to Web Dev\",\n      description: \"Beginner friendly Web Dev series by acmDev\",\n      url: \"https://github.com/acmCSUFDev/intro-to-web-dev\",\n    },\n    {\n      title: \"ICON\",\n      description: \"Notion Canvas integration for students\",\n      url: \"https://github.com/acmCSUFDev/ICON\",\n    },\n    {\n      title: \"Food Tinder\",\n      description: \"tinder for matching people by food places\",\n      url: \"https://github.com/acmCSUFDev/Food-Tinder\",\n    },\n  ];\n</script>\n\n<section class=\"container__projects\" id=\"Projects\">\n  <p class=\"header--big\">Projects</p>\n  {#each projects as { title, description, url }}\n    <div class=\"container__project\">\n      <a href={url} target=\"_blank\">\n        <p class=\"header__title\">{title}</p>\n      </a>\n      <p>{description}</p>\n    </div>\n  {/each}\n</section>\n\n<style>\n  .container__projects {\n    margin-top: 10rem;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n  }\n  .header--big {\n    font-size: 2.5rem;\n    font-weight: 780;\n  }\n  .container__project {\n    margin: 1rem;\n  }\n  .header__title {\n    color: white;\n    font-size: 1.5rem;\n    font-weight: 600;\n    transition: 400ms all;\n  }\n  .header__title:hover {\n    color: #2c91c6;\n  }\n</style>\nNow, you've successfully built up a decent website 🤩 🤩 You can always check the full code HERE\nLet's see how're we going to deploy this in the next blog :D",
    "createdAt": "2022-10-28T21:40:21Z",
    "lastEdited": "2022-10-28T21:42:17Z",
    "labels": ["dev", "svelte"],
    "author": {
      "url": "https://github.com/anhduy1202",
      "displayname": "anhduy1202",
      "fullname": "Daniel Truong",
      "picture": "https://avatars.githubusercontent.com/u/58461444?u=000cf71dd3ba84e38fba82bddc0618e8787fa911&v=4"
    }
  },
  {
    "id": 627,
    "url": "/blog/627",
    "discussionURL": "https://github.com/EthanThatOneKid/acmcsuf.com/discussions/627",
    "title": "Dev Portfolio Project Part 3 - About",
    "html": "<h1 dir=\"auto\">Introduction <g-emoji class=\"g-emoji\" alias=\"partying_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f973.png\">🥳</g-emoji></h1>\n<ul dir=\"auto\">\n<li>In this blog, we'll guide you to create the About component for our portfolio website and it looks something like this</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/197284531-ac9a3274-2a28-4e85-8fab-753e865463c5.png\"><img width=\"563\" alt=\"Screen Shot 2022-10-21 at 1 36 59 PM\" src=\"https://user-images.githubusercontent.com/58461444/197284531-ac9a3274-2a28-4e85-8fab-753e865463c5.png\" style=\"max-width: 100%;\"></a></p>\n<h1 dir=\"auto\">What'll be covered in this blog <g-emoji class=\"g-emoji\" alias=\"nerd_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f913.png\">🤓</g-emoji></h1>\n<ul dir=\"auto\">\n<li>Display image on website</li>\n<li>Props in Svelte</li>\n</ul>\n<h1 dir=\"auto\">Let's start <g-emoji class=\"g-emoji\" alias=\"robot\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f916.png\">🤖</g-emoji></h1>\n<h2 dir=\"auto\">Create About component</h2>\n<ul dir=\"auto\">\n<li>Similar to our NavBar in part 2, we'll create an <code class=\"notranslate\">About.svelte</code> in our components folder</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/197287657-1615ce55-efdc-4a3d-87fc-015a13553932.png\"><img width=\"282\" alt=\"Screen Shot 2022-10-21 at 1 58 44 PM\" src=\"https://user-images.githubusercontent.com/58461444/197287657-1615ce55-efdc-4a3d-87fc-015a13553932.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">NOTE: Don't forget to import our component in <code class=\"notranslate\">App.svelte</code> - our main Svelte file</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/197291552-f452f867-e876-46e4-8de6-9dd9a5b81ce9.png\"><img width=\"583\" alt=\"Screen Shot 2022-10-21 at 2 28 57 PM\" src=\"https://user-images.githubusercontent.com/58461444/197291552-f452f867-e876-46e4-8de6-9dd9a5b81ce9.png\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Display an Image on our website</h2>\n<ul dir=\"auto\">\n<li>To display an image, we'll need to use the <code class=\"notranslate\">&lt;img src=\"\" alt=\"\"&gt; &lt;/img&gt;</code> in HTML, but we first need to have an image link, it can be image link from the internet or your local image files</li>\n</ul>\n<h3 dir=\"auto\">EX: Here's an online image link from <a href=\"https://unsplash.com\" rel=\"nofollow\">Unsplash</a> ( website for free images )</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"https://images.unsplash.com/photo-1586115457457-b3753fe50cf1?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1576&amp;q=80\"><pre class=\"notranslate\"><code>https://images.unsplash.com/photo-1586115457457-b3753fe50cf1?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=1576&amp;q=80\n</code></pre></div>\n<h3 dir=\"auto\">EX: Here's a local image ( We downloaded a .svg image and put it in our assets folder )</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/197286640-12c6ea9c-5d15-4415-8515-a874cf4e8b73.png\"><img width=\"249\" alt=\"Screen Shot 2022-10-21 at 1 51 45 PM\" src=\"https://user-images.githubusercontent.com/58461444/197286640-12c6ea9c-5d15-4415-8515-a874cf4e8b73.png\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Now, let's try to import our local image in our <code class=\"notranslate\">About.svelte</code></h3>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n  import frank from &quot;../assets/frank.svg&quot;; // Import our local image\n&lt;/script&gt;\n\n&lt;section&gt;\n  &lt;div class=&quot;container__about&quot; id=&quot;About&quot;&gt;\n &lt;!-- Import the frank image and have it as our image source with width = 180px and height = 123px --&gt;\n    &lt;img width={180} height={123} src={frank} alt=&quot;&quot; /&gt;\n    &lt;p class=&quot;header--small&quot;&gt;Hi, I'm Frank &lt;/p&gt;\n    &lt;p class=&quot;header--big&quot;&gt;WELCOME TO MY PORTFOLIO&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/section&gt;\n\n&lt;style&gt;\n  .container__about {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 10rem;\n  }\n  .header--small {\n    font-size: 1.5rem;\n    margin: 2rem 0 0 0;\n    font-weight: 600;\n  }\n\n  .header--big {\n    font-size: 2rem;\n    color: #2C91C6;\n    font-weight: 700;\n  }\n&lt;/style&gt;\"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n  import frank from \"../assets/frank.svg\"; // Import our local image\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">section</span>&gt;\n  &lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__about<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>About<span class=\"pl-pds\">\"</span></span>&gt;\n <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span> Import the frank image and have it as our image source with width = 180px and height = 123px <span class=\"pl-c\">--&gt;</span></span>\n    &lt;<span class=\"pl-ent\">img</span> <span class=\"pl-e\">width</span>=<span class=\"pl-pse\">{</span><span class=\"pl-c1\">180</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">height</span>=<span class=\"pl-pse\">{</span><span class=\"pl-c1\">123</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">src</span>=<span class=\"pl-pse\">{</span><span class=\"pl-smi\">frank</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">alt</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span> /&gt;\n    &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header--small<span class=\"pl-pds\">\"</span></span>&gt;Hi, I'm Frank &lt;/<span class=\"pl-ent\">p</span>&gt;\n    &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header--big<span class=\"pl-pds\">\"</span></span>&gt;WELCOME TO MY PORTFOLIO&lt;/<span class=\"pl-ent\">p</span>&gt;\n  &lt;/<span class=\"pl-ent\">div</span>&gt;\n&lt;/<span class=\"pl-ent\">section</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n  .container__about {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 10rem;\n  }\n  .header--small {\n    font-size: 1.5rem;\n    margin: 2rem 0 0 0;\n    font-weight: 600;\n  }\n\n  .header--big {\n    font-size: 2rem;\n    color: #2C91C6;\n    font-weight: 700;\n  }\n&lt;/<span class=\"pl-ent\">style</span>&gt;</pre></div>\n<h2 dir=\"auto\">Then, after you save file, you should see the an image of Frank along with the welcome message <g-emoji class=\"g-emoji\" alias=\"shark\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f988.png\">🦈</g-emoji></h2>\n<h2 dir=\"auto\">BONUS: Props in Svelte <g-emoji class=\"g-emoji\" alias=\"eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f440.png\">👀</g-emoji></h2>\n<p dir=\"auto\">In any real application, you'll need to pass data from one component down to its children. To do that, we need to declare properties, generally shortened to 'props'. In Svelte, we do that with the <code class=\"notranslate\">export</code> keyword</p>\n<h3 dir=\"auto\">Let's see that with some code:</h3>\n<h3 dir=\"auto\">Passing props</h3>\n<blockquote>\n<p dir=\"auto\">App.svelte</p>\n</blockquote>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n  import About from &quot;./components/About.svelte&quot;;\n  import NavBar from &quot;./components/NavBar.svelte&quot;;\n&lt;/script&gt;\n\n&lt;main&gt;\n  &lt;NavBar/&gt;\n &lt;!-- we're passing a string with props name ```name```  to About component --&gt;\n  &lt;About name=&quot;Frank&quot;/&gt;\n&lt;/main&gt;\n\n&lt;style&gt;\n\tmain {\n\t\tmargin: 1rem;\n\t\tfont-size: 1.25rem;\n\t}\n&lt;/style&gt;\n \"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n  import About from \"./components/About.svelte\";\n  import NavBar from \"./components/NavBar.svelte\";\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">main</span>&gt;\n  &lt;<span class=\"pl-c1\">NavBar</span>/&gt;\n <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span> we're passing a string with props name ```name```  to About component <span class=\"pl-c\">--&gt;</span></span>\n  &lt;<span class=\"pl-c1\">About</span> <span class=\"pl-e\">name</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Frank<span class=\"pl-pds\">\"</span></span>/&gt;\n&lt;/<span class=\"pl-ent\">main</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n\tmain {\n\t\tmargin: 1rem;\n\t\tfont-size: 1.25rem;\n\t}\n&lt;/<span class=\"pl-ent\">style</span>&gt;\n </pre></div>\n<h3 dir=\"auto\">Receiving props</h3>\n<blockquote>\n<p dir=\"auto\">About.svelte</p>\n</blockquote>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n  export let name; // receive props ```name```\n  import frank from &quot;../assets/frank.svg&quot;;\n&lt;/script&gt;\n\n&lt;section&gt;\n  &lt;div class=&quot;container__about&quot; id=&quot;About&quot;&gt;\n    &lt;img width={180} height={123} src={frank} alt=&quot;&quot; /&gt;\n   &lt;!-- We're using the props here --&gt;\n    &lt;p class=&quot;header--small&quot;&gt;Hi, I'm {name}&lt;/p&gt; \n    &lt;p class=&quot;header--big&quot;&gt;WELCOME TO MY PORTFOLIO&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/section&gt;\n\n&lt;style&gt;\n  .container__about {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 10rem;\n  }\n  .header--small {\n    font-size: 1.5rem;\n    margin: 2rem 0 0 0;\n    font-weight: 600;\n  }\n\n  .header--big {\n    font-size: 2rem;\n    color: #2C91C6;\n    font-weight: 700;\n  }\n&lt;/style&gt;\"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n  export let name; // receive props ```name```\n  import frank from \"../assets/frank.svg\";\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">section</span>&gt;\n  &lt;<span class=\"pl-ent\">div</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__about<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>About<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">img</span> <span class=\"pl-e\">width</span>=<span class=\"pl-pse\">{</span><span class=\"pl-c1\">180</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">height</span>=<span class=\"pl-pse\">{</span><span class=\"pl-c1\">123</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">src</span>=<span class=\"pl-pse\">{</span><span class=\"pl-smi\">frank</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">alt</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span> /&gt;\n   <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span> We're using the props here <span class=\"pl-c\">--&gt;</span></span>\n    &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header--small<span class=\"pl-pds\">\"</span></span>&gt;Hi, I'm <span class=\"pl-pse\">{</span><span class=\"pl-smi\">name</span><span class=\"pl-pse\">}</span>&lt;/<span class=\"pl-ent\">p</span>&gt; \n    &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>header--big<span class=\"pl-pds\">\"</span></span>&gt;WELCOME TO MY PORTFOLIO&lt;/<span class=\"pl-ent\">p</span>&gt;\n  &lt;/<span class=\"pl-ent\">div</span>&gt;\n&lt;/<span class=\"pl-ent\">section</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n  .container__about {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 10rem;\n  }\n  .header--small {\n    font-size: 1.5rem;\n    margin: 2rem 0 0 0;\n    font-weight: 600;\n  }\n\n  .header--big {\n    font-size: 2rem;\n    color: #2C91C6;\n    font-weight: 700;\n  }\n&lt;/<span class=\"pl-ent\">style</span>&gt;</pre></div>\n<h2 dir=\"auto\">So, now if you change the props name into another string, it'll update the name in our About.svelte dynamically, so you can see that props will be helpful if we want to update dynamically instead of hard-coding the string <g-emoji class=\"g-emoji\" alias=\"smiling_face_with_three_hearts\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f970.png\">🥰</g-emoji></h2>\n<h2 dir=\"auto\">Now, you've successfully made the About component <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji> <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji> You can always check the full code <a href=\"https://github.com/acmCSUFDev/intro-to-web-dev/tree/part-2-reference\">HERE</a></h2>",
    "bodyText": "Introduction 🥳\n\nIn this blog, we'll guide you to create the About component for our portfolio website and it looks something like this\n\n\nWhat'll be covered in this blog 🤓\n\nDisplay image on website\nProps in Svelte\n\nLet's start 🤖\nCreate About component\n\nSimilar to our NavBar in part 2, we'll create an About.svelte in our components folder\n\n\nNOTE: Don't forget to import our component in App.svelte - our main Svelte file\n\nDisplay an Image on our website\n\nTo display an image, we'll need to use the <img src=\"\" alt=\"\"> </img> in HTML, but we first need to have an image link, it can be image link from the internet or your local image files\n\nEX: Here's an online image link from Unsplash ( website for free images )\nhttps://images.unsplash.com/photo-1586115457457-b3753fe50cf1?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1576&q=80\n\nEX: Here's a local image ( We downloaded a .svg image and put it in our assets folder )\n\nNow, let's try to import our local image in our About.svelte\n<script>\n  import frank from \"../assets/frank.svg\"; // Import our local image\n</script>\n\n<section>\n  <div class=\"container__about\" id=\"About\">\n <!-- Import the frank image and have it as our image source with width = 180px and height = 123px -->\n    <img width={180} height={123} src={frank} alt=\"\" />\n    <p class=\"header--small\">Hi, I'm Frank </p>\n    <p class=\"header--big\">WELCOME TO MY PORTFOLIO</p>\n  </div>\n</section>\n\n<style>\n  .container__about {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 10rem;\n  }\n  .header--small {\n    font-size: 1.5rem;\n    margin: 2rem 0 0 0;\n    font-weight: 600;\n  }\n\n  .header--big {\n    font-size: 2rem;\n    color: #2C91C6;\n    font-weight: 700;\n  }\n</style>\nThen, after you save file, you should see the an image of Frank along with the welcome message 🦈\nBONUS: Props in Svelte 👀\nIn any real application, you'll need to pass data from one component down to its children. To do that, we need to declare properties, generally shortened to 'props'. In Svelte, we do that with the export keyword\nLet's see that with some code:\nPassing props\n\nApp.svelte\n\n<script>\n  import About from \"./components/About.svelte\";\n  import NavBar from \"./components/NavBar.svelte\";\n</script>\n\n<main>\n  <NavBar/>\n <!-- we're passing a string with props name ```name```  to About component -->\n  <About name=\"Frank\"/>\n</main>\n\n<style>\n\tmain {\n\t\tmargin: 1rem;\n\t\tfont-size: 1.25rem;\n\t}\n</style>\n \nReceiving props\n\nAbout.svelte\n\n<script>\n  export let name; // receive props ```name```\n  import frank from \"../assets/frank.svg\";\n</script>\n\n<section>\n  <div class=\"container__about\" id=\"About\">\n    <img width={180} height={123} src={frank} alt=\"\" />\n   <!-- We're using the props here -->\n    <p class=\"header--small\">Hi, I'm {name}</p> \n    <p class=\"header--big\">WELCOME TO MY PORTFOLIO</p>\n  </div>\n</section>\n\n<style>\n  .container__about {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 10rem;\n  }\n  .header--small {\n    font-size: 1.5rem;\n    margin: 2rem 0 0 0;\n    font-weight: 600;\n  }\n\n  .header--big {\n    font-size: 2rem;\n    color: #2C91C6;\n    font-weight: 700;\n  }\n</style>\nSo, now if you change the props name into another string, it'll update the name in our About.svelte dynamically, so you can see that props will be helpful if we want to update dynamically instead of hard-coding the string 🥰\nNow, you've successfully made the About component 🤩 🤩 You can always check the full code HERE",
    "createdAt": "2022-10-21T21:43:32Z",
    "lastEdited": "2022-10-22T10:24:35Z",
    "labels": ["dev", "svelte"],
    "author": {
      "url": "https://github.com/anhduy1202",
      "displayname": "anhduy1202",
      "fullname": "Daniel Truong",
      "picture": "https://avatars.githubusercontent.com/u/58461444?u=000cf71dd3ba84e38fba82bddc0618e8787fa911&v=4"
    }
  },
  {
    "id": 615,
    "url": "/blog/615",
    "discussionURL": "https://github.com/EthanThatOneKid/acmcsuf.com/discussions/615",
    "title": "Dev Portfolio Project Part 2 - NavBar",
    "html": "<h1 dir=\"auto\">Introduction <g-emoji class=\"g-emoji\" alias=\"partying_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f973.png\">🥳</g-emoji></h1>\n<ul dir=\"auto\">\n<li>In this blog, we'll guide you to create a navigation bar for your website</li>\n</ul>\n<h1 dir=\"auto\">Prerequisites <g-emoji class=\"g-emoji\" alias=\"disguised_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f978.png\">🥸</g-emoji></h1>\n<ul dir=\"auto\">\n<li>Cloned the website and able to run it locally ( If not: check previous part )</li>\n</ul>\n<h1 dir=\"auto\">What you will learn <g-emoji class=\"g-emoji\" alias=\"nerd_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f913.png\">🤓</g-emoji></h1>\n<ul dir=\"auto\">\n<li>Brainstorming about website layout</li>\n<li>Project folder + file structures</li>\n<li>Components</li>\n<li>Svelte #each loop</li>\n<li>JavaScript Date object</li>\n<li>... many more</li>\n</ul>\n<h1 dir=\"auto\">Let's Start <g-emoji class=\"g-emoji\" alias=\"robot\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f916.png\">🤖</g-emoji></h1>\n<h2 dir=\"auto\">I. Website Layout <g-emoji class=\"g-emoji\" alias=\"globe_with_meridians\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f310.png\">🌐</g-emoji></h2>\n<h3 dir=\"auto\">Here's what our final website will look like</h3>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195721554-ef56be97-0e9a-4ad7-a3f7-528d0ba1c974.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195721554-ef56be97-0e9a-4ad7-a3f7-528d0ba1c974.png\" alt=\"Screen Shot 2022-10-13 at 3 20 27 PM\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Here's how it'll be broken down before jumping to code</h3>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195721905-8950dc80-d729-41b0-9b27-7537ab2159cb.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195721905-8950dc80-d729-41b0-9b27-7537ab2159cb.png\" alt=\"Screen Shot 2022-10-13 at 3 20 27 PM\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">II. Let's take a look at our project structure <g-emoji class=\"g-emoji\" alias=\"eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f440.png\">👀</g-emoji></h2>\n<h2 dir=\"auto\">Here's what you will see when first start</h2>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195758801-8c57fe61-b968-4309-b635-07974a1f1e43.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195758801-8c57fe61-b968-4309-b635-07974a1f1e43.png\" alt=\"Screen Shot 2022-10-13 at 8 54 34 PM\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Although there're lots of folders to look at, we only focus on the \"src\" folder</h2>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195759049-18fdd991-f235-49e6-811f-c44a9d3871b2.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195759049-18fdd991-f235-49e6-811f-c44a9d3871b2.png\" alt=\"Screen Shot 2022-10-13 at 8 56 04 PM\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Here're the main files/folders you need to know</h2>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">App.svelte</code> is our main Svelte file</li>\n<li><code class=\"notranslate\">App.css</code>is our main global CSS file</li>\n<li><code class=\"notranslate\">lib</code> folder contains our components which we will rename to \"components\" later on instead</li>\n</ul>\n<h2 dir=\"auto\">Let's do a quick clean up by removing things we don't need</h2>\n<p dir=\"auto\"><code class=\"notranslate\">App.svelte</code>: Delete everything but the tags</p>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195759652-21a46b6e-7fa6-4c91-9fd3-9b4be0fe24e3.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195759652-21a46b6e-7fa6-4c91-9fd3-9b4be0fe24e3.png\" alt=\"Screen Shot 2022-10-13 at 9 01 47 PM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">App.css</code>: Delete <code class=\"notranslate\">place-items:center</code> ( line 30 ) since it'll make everything become center and we don't want that</p>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195760555-8f7ba37b-61fe-45a0-ac16-41a18834679d.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195760555-8f7ba37b-61fe-45a0-ac16-41a18834679d.png\" alt=\"Screen Shot 2022-10-13 at 9 09 43 PM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">lib</code> : Rename to <code class=\"notranslate\">components</code></p>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195759839-8144ba95-049c-4cd7-a682-7cf83a38f882.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195759839-8144ba95-049c-4cd7-a682-7cf83a38f882.png\" alt=\"Screen Shot 2022-10-13 at 9 03 23 PM\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Delete <code class=\"notranslate\">Counter.svelte</code></p>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195759964-aaae9858-01fa-48d3-952f-1ff9f86f37e1.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195759964-aaae9858-01fa-48d3-952f-1ff9f86f37e1.png\" alt=\"Screen Shot 2022-10-13 at 9 04 12 PM\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">III. Good job, now let's start making our NavBar <g-emoji class=\"g-emoji\" alias=\"partying_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f973.png\">🥳</g-emoji></h2>\n<ul dir=\"auto\">\n<li>Here's the NavBar we want to make:</li>\n</ul>\n<blockquote>\n<p dir=\"auto\">About, Experiences, Projects are link to our sections, Thursday is the current date ( we'll use JavaScript Date Object to make this )</p>\n</blockquote>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195773912-328b1f5d-9770-441a-a34f-3b66ff77379b.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195773912-328b1f5d-9770-441a-a34f-3b66ff77379b.png\" alt=\"Screen Shot 2022-10-13 at 11 04 24 PM\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>In <code class=\"notranslate\">components</code> folder, create a file called <code class=\"notranslate\">NavBar.svelte</code> and add the necessary tags as follow</li>\n</ul>\n<blockquote>\n<p dir=\"auto\">Note: You don't need to have all tags as below, you can even have just a <code class=\"notranslate\">&lt;nav&gt; &lt;/nav&gt;</code> tag and it's still valid in Svelte</p>\n</blockquote>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195760421-dd4144c5-5436-41af-a642-98dece8b3331.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195760421-dd4144c5-5436-41af-a642-98dece8b3331.png\" alt=\"Screen Shot 2022-10-13 at 9 08 38 PM\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Now, let's see how component works in Svelte</h2>\n<ul dir=\"auto\">\n<li>Type anything between <code class=\"notranslate\">&lt;nav&gt; &lt;/nav&gt;</code> ( because if you want to display something, it has to be within a HTML tag ) in your <code class=\"notranslate\">NavBar.svelte</code> file and save it</li>\n</ul>\n<blockquote>\n<p dir=\"auto\"><code class=\"notranslate\">&lt;p&gt; &lt;/p&gt;</code> tag stands for paragraph</p>\n</blockquote>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195761521-a0f7804d-a0b7-4e8f-9e23-b6aec37c26ed.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195761521-a0f7804d-a0b7-4e8f-9e23-b6aec37c26ed.png\" alt=\"Screen Shot 2022-10-13 at 9 18 57 PM\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>Now, if you run your website using <code class=\"notranslate\">npm run dev</code>, it won't display that words because you have to import it in <code class=\"notranslate\">App.svelte</code> - our main Svelte file</li>\n</ul>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195761730-c8a30186-cd70-4dcd-812c-d92a3a8a14b7.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195761730-c8a30186-cd70-4dcd-812c-d92a3a8a14b7.png\" alt=\"Screen Shot 2022-10-13 at 9 21 05 PM\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Tada !! that's how you import a component , when you run your website again, you should see it display NavBar content</h2>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195761975-94a482a8-b9e9-421b-8f45-3eb9e9abbd52.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195761975-94a482a8-b9e9-421b-8f45-3eb9e9abbd52.png\" alt=\"Screen Shot 2022-10-13 at 9 23 16 PM\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Now, let's go back to <code class=\"notranslate\">NavBar.svelte</code> and start creating our navigation bar</h2>\n<blockquote>\n<p dir=\"auto\">You can copy paste this code block and read the comments to understand more</p>\n</blockquote>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n\n&lt;/script&gt;\n\n&lt;nav&gt;\n &lt;!-- We're creating a navigation bar with 3 items: About, Experiences, Projects\\--&gt;\n\n     &lt;section class=&quot;container__nav&quot; id=&quot;/&quot;&gt;\n        &lt;ol&gt;  \n  &lt;!-- the href=#something  links to each section so we can create a scroll to section feature\\--&gt;\n           &lt;li&gt;\n               &lt;a href='#About' class=&quot;nav__item&quot;&gt;\n                  About\n               &lt;/a&gt;\n          &lt;/li&gt;\n          &lt;li&gt;\n               &lt;a href='#Experiences' class=&quot;nav__item&quot;&gt;\n                 Experiences\n               &lt;/a&gt;\n         &lt;/li&gt;\n      &lt;li&gt;\n          &lt;a href='#Projects' class=&quot;nav__item&quot;&gt;\n            Projects\n          &lt;/a&gt;\n     &lt;/li&gt;\n   &lt;/ol&gt; \n&lt;/section&gt;\n&lt;/nav&gt;\n\n&lt;style&gt;\n/* This is CSS style for our navigation bar */\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n&lt;/style&gt;\"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">nav</span>&gt;\n <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span> We're creating a navigation bar with 3 items: About, Experiences, Projects\\<span class=\"pl-c\">--&gt;</span></span>\n\n     &lt;<span class=\"pl-ent\">section</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__nav<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>&gt;\n        &lt;<span class=\"pl-ent\">ol</span>&gt;  \n  <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span> the href=#something  links to each section so we can create a scroll to section feature\\<span class=\"pl-c\">--&gt;</span></span>\n           &lt;<span class=\"pl-ent\">li</span>&gt;\n               &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#About<span class=\"pl-pds\">'</span></span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nav__item<span class=\"pl-pds\">\"</span></span>&gt;\n                  About\n               &lt;/<span class=\"pl-ent\">a</span>&gt;\n          &lt;/<span class=\"pl-ent\">li</span>&gt;\n          &lt;<span class=\"pl-ent\">li</span>&gt;\n               &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#Experiences<span class=\"pl-pds\">'</span></span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nav__item<span class=\"pl-pds\">\"</span></span>&gt;\n                 Experiences\n               &lt;/<span class=\"pl-ent\">a</span>&gt;\n         &lt;/<span class=\"pl-ent\">li</span>&gt;\n      &lt;<span class=\"pl-ent\">li</span>&gt;\n          &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#Projects<span class=\"pl-pds\">'</span></span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nav__item<span class=\"pl-pds\">\"</span></span>&gt;\n            Projects\n          &lt;/<span class=\"pl-ent\">a</span>&gt;\n     &lt;/<span class=\"pl-ent\">li</span>&gt;\n   &lt;/<span class=\"pl-ent\">ol</span>&gt; \n&lt;/<span class=\"pl-ent\">section</span>&gt;\n&lt;/<span class=\"pl-ent\">nav</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n/* This is CSS style for our navigation bar */\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n&lt;/<span class=\"pl-ent\">style</span>&gt;</pre></div>\n<h2 dir=\"auto\">Now, when you save the file, our NavBar will look nicer</h2>\n<p dir=\"auto\"><a href=\"https://user-images.githubusercontent.com/58461444/195762910-a286643b-875b-45fa-b2f8-68e1929c893d.png\" rel=\"nofollow\"><img src=\"https://user-images.githubusercontent.com/58461444/195762910-a286643b-875b-45fa-b2f8-68e1929c893d.png\" alt=\"Screen Shot 2022-10-13 at 9 31 10 PM\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"warning\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/26a0.png\">⚠️</g-emoji> BUT, don't you think this block of code is kinda repetitive? we don't want to type the same thing every time we add a new item to our nav bar</h2>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;ol class=&quot;container__nav&quot; id=&quot;/&quot;&gt;\n  &lt;!-- the href=#something  links to each section so we can create a scroll to section feature--&gt;\n      &lt;li&gt;\n      &lt;a href='#About' class=&quot;nav__item&quot;&gt;\n        About\n      &lt;/a&gt;\n     &lt;/li&gt;\n     &lt;li&gt;\n      &lt;a href='#Experiences' class=&quot;nav__item&quot;&gt;\n        Experiences\n      &lt;/a&gt;\n    &lt;/li&gt;\n     &lt;li&gt;\n      &lt;a href='#Projects' class=&quot;nav__item&quot;\\&gt;\n        Projects\n      &lt;/a&gt;\n     &lt;/li&gt;\n  &lt;/ol&gt;\"><pre>&lt;<span class=\"pl-ent\">ol</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__nav<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>&gt;\n  <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span> the href=#something  links to each section so we can create a scroll to section feature<span class=\"pl-c\">--&gt;</span></span>\n      &lt;<span class=\"pl-ent\">li</span>&gt;\n      &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#About<span class=\"pl-pds\">'</span></span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nav__item<span class=\"pl-pds\">\"</span></span>&gt;\n        About\n      &lt;/<span class=\"pl-ent\">a</span>&gt;\n     &lt;/<span class=\"pl-ent\">li</span>&gt;\n     &lt;<span class=\"pl-ent\">li</span>&gt;\n      &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#Experiences<span class=\"pl-pds\">'</span></span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nav__item<span class=\"pl-pds\">\"</span></span>&gt;\n        Experiences\n      &lt;/<span class=\"pl-ent\">a</span>&gt;\n    &lt;/<span class=\"pl-ent\">li</span>&gt;\n     &lt;<span class=\"pl-ent\">li</span>&gt;\n      &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#Projects<span class=\"pl-pds\">'</span></span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nav__item<span class=\"pl-pds\">\"</span></span>\\&gt;\n        Projects\n      &lt;/<span class=\"pl-ent\">a</span>&gt;\n     &lt;/<span class=\"pl-ent\">li</span>&gt;\n  &lt;/<span class=\"pl-ent\">ol</span>&gt;</pre></div>\n<h2 dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"bulb\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png\">💡</g-emoji>So, what we can do better by using Svelte <strong>#each</strong> loop, we'll create an Array of Objects that hold our nav items and then loop through every items and render it to the browser</h2>\n<blockquote>\n<p dir=\"auto\">NavBar.svelte</p>\n</blockquote>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n  // @ts-nocheck\n  history.scrollRestoration = &quot;manual&quot; // Prevent automatic scrolling\n  const navItems = [\n    { title: &quot;About&quot;, url: &quot;#About&quot; },\n    { title: &quot;Experiences&quot;, url: &quot;#Experiences&quot; },\n    { title: &quot;Projects&quot;, url: &quot;#Projects&quot; },\n  ];\n\n&lt;/script&gt;\n\n&lt;nav&gt;\n  &lt;section class=&quot;container__nav&quot; id=&quot;/&quot;&gt;\n    &lt;ol class=&quot;container_nav&quot; id=&quot;/&quot;&gt;\n      {#each navItems as { title, url }}\n        &lt;li&gt;\n          &lt;a href={url} class=&quot;nav__item&quot;&gt;\n            {title}\n          &lt;/a&gt;\n        &lt;/li&gt;\n      {/each}\n    &lt;/ol&gt; \n  &lt;/section&gt;\n&lt;/nav&gt;\n\n&lt;style&gt;\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n&lt;/style&gt;\"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n  // @ts-nocheck\n  history.scrollRestoration = \"manual\" // Prevent automatic scrolling\n  const navItems = [\n    { title: \"About\", url: \"#About\" },\n    { title: \"Experiences\", url: \"#Experiences\" },\n    { title: \"Projects\", url: \"#Projects\" },\n  ];\n\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">nav</span>&gt;\n  &lt;<span class=\"pl-ent\">section</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__nav<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">ol</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container_nav<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>&gt;\n      {#<span class=\"pl-k\">each</span> <span class=\"pl-smi\">navItems</span> <span class=\"pl-k\">as</span> { title, url }}\n        &lt;<span class=\"pl-ent\">li</span>&gt;\n          &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-pse\">{</span><span class=\"pl-smi\">url</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nav__item<span class=\"pl-pds\">\"</span></span>&gt;\n            <span class=\"pl-pse\">{</span><span class=\"pl-smi\">title</span><span class=\"pl-pse\">}</span>\n          &lt;/<span class=\"pl-ent\">a</span>&gt;\n        &lt;/<span class=\"pl-ent\">li</span>&gt;\n      {/<span class=\"pl-k\">each</span>}\n    &lt;/<span class=\"pl-ent\">ol</span>&gt; \n  &lt;/<span class=\"pl-ent\">section</span>&gt;\n&lt;/<span class=\"pl-ent\">nav</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n&lt;/<span class=\"pl-ent\">style</span>&gt;</pre></div>\n<h2 dir=\"auto\">JavaScript Date Object <g-emoji class=\"g-emoji\" alias=\"calendar\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f4c6.png\">📆</g-emoji></h2>\n<blockquote>\n<p dir=\"auto\">Display the current date with custom parameters</p>\n</blockquote>\n<p dir=\"auto\">We can do that in the <code class=\"notranslate\">&lt;script&gt; &lt;/script&gt;</code> that allows us to use JavaScript magic</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"let time = new Date(Date.now()); // Create Date Object\nconst options = { // We'll need this option for toLocaleDateString() method later on to display on the weekday\n  weekday: &quot;long&quot;,\n};\"><pre><span class=\"pl-k\">let</span> <span class=\"pl-s1\">time</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">Date</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Date</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">now</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// Create Date Object</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">options</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">// We'll need this option for toLocaleDateString() method later on to display on the weekday</span>\n  <span class=\"pl-c1\">weekday</span>: <span class=\"pl-s\">\"long\"</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Then we can display it in our html like this to display current weekday:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;p class=&quot;time&quot;&gt;{time.toLocaleDateString(undefined, options)}&lt;p&gt;\"><pre><span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">p</span> <span class=\"pl-c1\">class</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">\"time\"</span><span class=\"pl-c1\">&gt;</span><span class=\"pl-kos\">{</span><span class=\"pl-s1\">time</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toLocaleDateString</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">undefined</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">options</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-ent\">p</span><span class=\"pl-c1\">&gt;</span></pre></div>\n<h2 dir=\"auto\">Here's the full code for <code class=\"notranslate\">NavBar.svelte</code></h2>\n<div class=\"highlight highlight-source-svelte notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;script&gt;\n  // @ts-nocheck\n  history.scrollRestoration = &quot;manual&quot; // Prevent automatic scrolling\n  const navItems = [\n    { title: &quot;About&quot;, url: &quot;#About&quot; },\n    { title: &quot;Experiences&quot;, url: &quot;#Experiences&quot; },\n    { title: &quot;Projects&quot;, url: &quot;#Projects&quot; },\n  ];\n  let time = new Date(Date.now());\n  const options = {\n    weekday: &quot;long&quot;,\n  };\n&lt;/script&gt;\n\n&lt;nav&gt;\n  &lt;section class=&quot;container__nav&quot; id=&quot;/&quot;&gt;\n    &lt;ol class=&quot;container__nav&quot; id=&quot;/&quot;&gt;\n      {#each navItems as { title, url }}\n        &lt;li&gt;\n          &lt;a href={url} class=&quot;nav__item&quot;&gt;\n            {title}\n          &lt;/a&gt;\n        &lt;/li&gt;\n      {/each}\n    &lt;p class=&quot;time&quot;&gt;{time.toLocaleDateString(undefined, options)}&lt;/p&gt;\n  &lt;/ol&gt;\n  &lt;/section&gt;\n&lt;/nav&gt;\n\n&lt;style&gt;\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n&lt;/style&gt;\"><pre>&lt;<span class=\"pl-ent\">script</span>&gt;\n  // @ts-nocheck\n  history.scrollRestoration = \"manual\" // Prevent automatic scrolling\n  const navItems = [\n    { title: \"About\", url: \"#About\" },\n    { title: \"Experiences\", url: \"#Experiences\" },\n    { title: \"Projects\", url: \"#Projects\" },\n  ];\n  let time = new Date(Date.now());\n  const options = {\n    weekday: \"long\",\n  };\n&lt;/<span class=\"pl-ent\">script</span>&gt;\n\n&lt;<span class=\"pl-ent\">nav</span>&gt;\n  &lt;<span class=\"pl-ent\">section</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__nav<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">ol</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>container__nav<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/<span class=\"pl-pds\">\"</span></span>&gt;\n      {#<span class=\"pl-k\">each</span> <span class=\"pl-smi\">navItems</span> <span class=\"pl-k\">as</span> { title, url }}\n        &lt;<span class=\"pl-ent\">li</span>&gt;\n          &lt;<span class=\"pl-ent\">a</span> <span class=\"pl-e\">href</span>=<span class=\"pl-pse\">{</span><span class=\"pl-smi\">url</span><span class=\"pl-pse\">}</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>nav__item<span class=\"pl-pds\">\"</span></span>&gt;\n            <span class=\"pl-pse\">{</span><span class=\"pl-smi\">title</span><span class=\"pl-pse\">}</span>\n          &lt;/<span class=\"pl-ent\">a</span>&gt;\n        &lt;/<span class=\"pl-ent\">li</span>&gt;\n      {/<span class=\"pl-k\">each</span>}\n    &lt;<span class=\"pl-ent\">p</span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>time<span class=\"pl-pds\">\"</span></span>&gt;<span class=\"pl-pse\">{</span><span class=\"pl-smi\">time</span>.<span class=\"pl-en\">toLocaleDateString</span>(<span class=\"pl-c1\">undefined</span>, <span class=\"pl-smi\">options</span>)<span class=\"pl-pse\">}</span>&lt;/<span class=\"pl-ent\">p</span>&gt;\n  &lt;/<span class=\"pl-ent\">ol</span>&gt;\n  &lt;/<span class=\"pl-ent\">section</span>&gt;\n&lt;/<span class=\"pl-ent\">nav</span>&gt;\n\n&lt;<span class=\"pl-ent\">style</span>&gt;\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n&lt;/<span class=\"pl-ent\">style</span>&gt;</pre></div>\n<h2 dir=\"auto\">Now, you've successfully made the navigation bar <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji> <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji> You can always check the full code <a href=\"https://github.com/acmCSUFDev/intro-to-web-dev/tree/part-2-reference\">HERE</a></h2>",
    "bodyText": "Introduction 🥳\n\nIn this blog, we'll guide you to create a navigation bar for your website\n\nPrerequisites 🥸\n\nCloned the website and able to run it locally ( If not: check previous part )\n\nWhat you will learn 🤓\n\nBrainstorming about website layout\nProject folder + file structures\nComponents\nSvelte #each loop\nJavaScript Date object\n... many more\n\nLet's Start 🤖\nI. Website Layout 🌐\nHere's what our final website will look like\n\nHere's how it'll be broken down before jumping to code\n\nII. Let's take a look at our project structure 👀\nHere's what you will see when first start\n\nAlthough there're lots of folders to look at, we only focus on the \"src\" folder\n\nHere're the main files/folders you need to know\n\nApp.svelte is our main Svelte file\nApp.cssis our main global CSS file\nlib folder contains our components which we will rename to \"components\" later on instead\n\nLet's do a quick clean up by removing things we don't need\nApp.svelte: Delete everything but the tags\n\nApp.css: Delete place-items:center ( line 30 ) since it'll make everything become center and we don't want that\n\nlib : Rename to components\n\nDelete Counter.svelte\n\nIII. Good job, now let's start making our NavBar 🥳\n\nHere's the NavBar we want to make:\n\n\nAbout, Experiences, Projects are link to our sections, Thursday is the current date ( we'll use JavaScript Date Object to make this )\n\n\n\nIn components folder, create a file called NavBar.svelte and add the necessary tags as follow\n\n\nNote: You don't need to have all tags as below, you can even have just a <nav> </nav> tag and it's still valid in Svelte\n\n\nNow, let's see how component works in Svelte\n\nType anything between <nav> </nav> ( because if you want to display something, it has to be within a HTML tag ) in your NavBar.svelte file and save it\n\n\n<p> </p> tag stands for paragraph\n\n\n\nNow, if you run your website using npm run dev, it won't display that words because you have to import it in App.svelte - our main Svelte file\n\n\nTada !! that's how you import a component , when you run your website again, you should see it display NavBar content\n\nNow, let's go back to NavBar.svelte and start creating our navigation bar\n\nYou can copy paste this code block and read the comments to understand more\n\n<script>\n\n</script>\n\n<nav>\n <!-- We're creating a navigation bar with 3 items: About, Experiences, Projects\\-->\n\n     <section class=\"container__nav\" id=\"/\">\n        <ol>  \n  <!-- the href=#something  links to each section so we can create a scroll to section feature\\-->\n           <li>\n               <a href='#About' class=\"nav__item\">\n                  About\n               </a>\n          </li>\n          <li>\n               <a href='#Experiences' class=\"nav__item\">\n                 Experiences\n               </a>\n         </li>\n      <li>\n          <a href='#Projects' class=\"nav__item\">\n            Projects\n          </a>\n     </li>\n   </ol> \n</section>\n</nav>\n\n<style>\n/* This is CSS style for our navigation bar */\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n</style>\nNow, when you save the file, our NavBar will look nicer\n\n⚠️ BUT, don't you think this block of code is kinda repetitive? we don't want to type the same thing every time we add a new item to our nav bar\n<ol class=\"container__nav\" id=\"/\">\n  <!-- the href=#something  links to each section so we can create a scroll to section feature-->\n      <li>\n      <a href='#About' class=\"nav__item\">\n        About\n      </a>\n     </li>\n     <li>\n      <a href='#Experiences' class=\"nav__item\">\n        Experiences\n      </a>\n    </li>\n     <li>\n      <a href='#Projects' class=\"nav__item\"\\>\n        Projects\n      </a>\n     </li>\n  </ol>\n💡So, what we can do better by using Svelte #each loop, we'll create an Array of Objects that hold our nav items and then loop through every items and render it to the browser\n\nNavBar.svelte\n\n<script>\n  // @ts-nocheck\n  history.scrollRestoration = \"manual\" // Prevent automatic scrolling\n  const navItems = [\n    { title: \"About\", url: \"#About\" },\n    { title: \"Experiences\", url: \"#Experiences\" },\n    { title: \"Projects\", url: \"#Projects\" },\n  ];\n\n</script>\n\n<nav>\n  <section class=\"container__nav\" id=\"/\">\n    <ol class=\"container_nav\" id=\"/\">\n      {#each navItems as { title, url }}\n        <li>\n          <a href={url} class=\"nav__item\">\n            {title}\n          </a>\n        </li>\n      {/each}\n    </ol> \n  </section>\n</nav>\n\n<style>\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n</style>\nJavaScript Date Object 📆\n\nDisplay the current date with custom parameters\n\nWe can do that in the <script> </script> that allows us to use JavaScript magic\nlet time = new Date(Date.now()); // Create Date Object\nconst options = { // We'll need this option for toLocaleDateString() method later on to display on the weekday\n  weekday: \"long\",\n};\nThen we can display it in our html like this to display current weekday:\n<p class=\"time\">{time.toLocaleDateString(undefined, options)}<p>\nHere's the full code for NavBar.svelte\n<script>\n  // @ts-nocheck\n  history.scrollRestoration = \"manual\" // Prevent automatic scrolling\n  const navItems = [\n    { title: \"About\", url: \"#About\" },\n    { title: \"Experiences\", url: \"#Experiences\" },\n    { title: \"Projects\", url: \"#Projects\" },\n  ];\n  let time = new Date(Date.now());\n  const options = {\n    weekday: \"long\",\n  };\n</script>\n\n<nav>\n  <section class=\"container__nav\" id=\"/\">\n    <ol class=\"container__nav\" id=\"/\">\n      {#each navItems as { title, url }}\n        <li>\n          <a href={url} class=\"nav__item\">\n            {title}\n          </a>\n        </li>\n      {/each}\n    <p class=\"time\">{time.toLocaleDateString(undefined, options)}</p>\n  </ol>\n  </section>\n</nav>\n\n<style>\n   ol {\n    list-style: none;\n  }\n  li {\n    padding: 0;\n  }\n  .container__nav {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n  }\n  .nav__item {\n    color: white;\n    font-weight: 600;\n    font-size: 2rem;\n    margin: 0 2rem;\n    transition: all 400ms;\n  }\n  .nav__item:hover {\n    color: rgb(0, 157, 255);\n  }\n  .time {\n    color: #1a1a1a;\n    font-weight: 700;\n    background-color: #2C91C6;;\n    padding: 0.35rem;\n    margin: 0 2rem;\n    border-radius: 12px;\n  }\n</style>\nNow, you've successfully made the navigation bar 🤩 🤩 You can always check the full code HERE",
    "createdAt": "2022-10-13T22:27:54Z",
    "lastEdited": "2022-10-22T00:00:39Z",
    "labels": ["dev", "svelte"],
    "author": {
      "url": "https://github.com/anhduy1202",
      "displayname": "anhduy1202",
      "fullname": "Daniel Truong",
      "picture": "https://avatars.githubusercontent.com/u/58461444?u=000cf71dd3ba84e38fba82bddc0618e8787fa911&v=4"
    }
  },
  {
    "id": 613,
    "url": "/blog/613",
    "discussionURL": "https://github.com/EthanThatOneKid/acmcsuf.com/discussions/613",
    "title": "Dev Portfolio Project Part 1 - Getting Started",
    "html": "<h1 dir=\"auto\">Introduction <g-emoji class=\"g-emoji\" alias=\"partying_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f973.png\">🥳</g-emoji></h1>\n<ul dir=\"auto\">\n<li>This is a beginner friendly series made by acmDev team with the goal to help beginner developers create their first website using <strong>Svelte ( Javascript framework to build website )</strong></li>\n</ul>\n<h1 dir=\"auto\">What'll be covered in this blog <g-emoji class=\"g-emoji\" alias=\"nerd_face\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f913.png\">🤓</g-emoji></h1>\n<ul dir=\"auto\">\n<li>Required installation for the project</li>\n<li>Setup the project  ( clone the repo )</li>\n<li>Run the project locally</li>\n</ul>\n<h1 dir=\"auto\">Let's start <g-emoji class=\"g-emoji\" alias=\"robot\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f916.png\">🤖</g-emoji></h1>\n<h2 dir=\"auto\">A. Technology Installation:</h2>\n<ul dir=\"auto\">\n<li><a href=\"https://code.visualstudio.com/download\" rel=\"nofollow\">VSCode</a> ( text editor - where you'll code ) - <strong>Required</strong></li>\n<li><a href=\"https://nodejs.org/en/download/\" rel=\"nofollow\">Node.js v16+</a> ( JavaScript environment to help you install Svelte later on ) - <strong>Required</strong>\n<ul dir=\"auto\">\n<li><strong>Note for Ubuntu/Tuffix users</strong>: Refer to the instructions at the bottom of the page</li>\n</ul>\n</li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode\" rel=\"nofollow\">Svelte Plugins</a> ( after you've downloaded VSCode, open Extensions and search for Svelte to install the plugins - it helps you highlight code and autocomplete with Svelte syntax) - <strong>Required</strong></li>\n<li><a href=\"https://git-scm.com/downloads\" rel=\"nofollow\">Git</a> ( for collaboration purpose and you'll need to use this in real world but not necessary for this project ) - <strong>Optional</strong></li>\n</ul>\n<h2 dir=\"auto\">B. Setup the project:</h2>\n<blockquote>\n<h2 dir=\"auto\"><a href=\"https://github.com/acmCSUFDev/website-template\">Project Template Link</a></h2>\n</blockquote>\n<h2 dir=\"auto\">1. Clone the repo ( 2 ways )</h2>\n<ol dir=\"auto\">\n<li>Using Git ( You'll need to <a href=\"https://git-scm.com/downloads\" rel=\"nofollow\">Download Git</a> first )</li>\n</ol>\n<ul dir=\"auto\">\n<li>Type the command <code class=\"notranslate\">git clone https://github.com/acmCSUFDev/website-template.git</code> in your terminal to clone</li>\n</ul>\n<ol start=\"2\" dir=\"auto\">\n<li>Download the ZIP file from this repo ( Beginner Friendly )</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/194434631-6158497d-4883-43aa-a25d-369afa089d8a.png\"><img width=\"1013\" alt=\"Screen Shot 2022-10-06 at 4 09 14 PM\" src=\"https://user-images.githubusercontent.com/58461444/194434631-6158497d-4883-43aa-a25d-369afa089d8a.png\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">2. Open with VSCode</h2>\n<ul dir=\"auto\">\n<li>Once you've cloned our website template, UNZIP the folder if you choose <strong>method 2</strong>, then open <strong>the folder you've just unzipped</strong>  in VSCode</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/194434835-04d6610e-2971-461e-89a1-09288c247e04.png\"><img width=\"510\" alt=\"Screen Shot 2022-10-06 at 4 11 25 PM\" src=\"https://user-images.githubusercontent.com/58461444/194434835-04d6610e-2971-461e-89a1-09288c247e04.png\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">C. Run the project locally</h2>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Have Node.js installed.</p>\n</li>\n<li>\n<p dir=\"auto\">In your VSCode, in the project folder, open Terminal and type<br>\n<code class=\"notranslate\">npm install</code></p>\n</li>\n<li>\n<p dir=\"auto\">After npm install, you should see a folder called node_modules which indicated you've used npm install correctly</p>\n</li>\n<li>\n<p dir=\"auto\">Run your website by typing and click on the link provided<br>\n<code class=\"notranslate\">npm run dev</code></p>\n</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/58461444/194435735-d87c34de-3325-491f-80c8-824592222ecb.png\"><img width=\"1302\" alt=\"Screen Shot 2022-10-06 at 4 17 18 PM\" src=\"https://user-images.githubusercontent.com/58461444/194435735-d87c34de-3325-491f-80c8-824592222ecb.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">After you click on the link provided, you should see our beautiful Svelte template :) congrats <g-emoji class=\"g-emoji\" alias=\"star_struck\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f929.png\">🤩</g-emoji></p>\n<h1 dir=\"auto\">Note on installing Node.js on Ubuntu/Tuffix</h1>\n<p dir=\"auto\">By default, <code class=\"notranslate\">sudo apt install nodejs</code> will install node v10 which is incompatible with Svelte. To remedy this, first uninstall the existing nodejs and npm installation with <code class=\"notranslate\">sudo apt remove nodejs npm</code> and install <a href=\"https://github.com/nvm-sh/nvm\">Node Version Manager</a> using</p>\n<p dir=\"auto\"><code class=\"notranslate\">wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash</code></p>\n<p dir=\"auto\">Afterwards, restart your terminal to load the new <code class=\"notranslate\">nvm</code> command.</p>\n<p dir=\"auto\">Now run <code class=\"notranslate\">nvm install 16</code> and <code class=\"notranslate\">nvm use 16</code> to install and set node v16 as the default version</p>\n<p dir=\"auto\">Run <code class=\"notranslate\">node -v</code> to verify the correct version is now in use</p>",
    "bodyText": "Introduction 🥳\n\nThis is a beginner friendly series made by acmDev team with the goal to help beginner developers create their first website using Svelte ( Javascript framework to build website )\n\nWhat'll be covered in this blog 🤓\n\nRequired installation for the project\nSetup the project  ( clone the repo )\nRun the project locally\n\nLet's start 🤖\nA. Technology Installation:\n\nVSCode ( text editor - where you'll code ) - Required\nNode.js v16+ ( JavaScript environment to help you install Svelte later on ) - Required\n\nNote for Ubuntu/Tuffix users: Refer to the instructions at the bottom of the page\n\n\nSvelte Plugins ( after you've downloaded VSCode, open Extensions and search for Svelte to install the plugins - it helps you highlight code and autocomplete with Svelte syntax) - Required\nGit ( for collaboration purpose and you'll need to use this in real world but not necessary for this project ) - Optional\n\nB. Setup the project:\n\nProject Template Link\n\n1. Clone the repo ( 2 ways )\n\nUsing Git ( You'll need to Download Git first )\n\n\nType the command git clone https://github.com/acmCSUFDev/website-template.git in your terminal to clone\n\n\nDownload the ZIP file from this repo ( Beginner Friendly )\n\n\n2. Open with VSCode\n\nOnce you've cloned our website template, UNZIP the folder if you choose method 2, then open the folder you've just unzipped  in VSCode\n\n\nC. Run the project locally\n\n\nHave Node.js installed.\n\n\nIn your VSCode, in the project folder, open Terminal and type\nnpm install\n\n\nAfter npm install, you should see a folder called node_modules which indicated you've used npm install correctly\n\n\nRun your website by typing and click on the link provided\nnpm run dev\n\n\n\nAfter you click on the link provided, you should see our beautiful Svelte template :) congrats 🤩\nNote on installing Node.js on Ubuntu/Tuffix\nBy default, sudo apt install nodejs will install node v10 which is incompatible with Svelte. To remedy this, first uninstall the existing nodejs and npm installation with sudo apt remove nodejs npm and install Node Version Manager using\nwget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash\nAfterwards, restart your terminal to load the new nvm command.\nNow run nvm install 16 and nvm use 16 to install and set node v16 as the default version\nRun node -v to verify the correct version is now in use",
    "createdAt": "2022-10-13T21:11:16Z",
    "lastEdited": "2022-10-21T04:01:11Z",
    "labels": ["dev", "svelte"],
    "author": {
      "url": "https://github.com/anhduy1202",
      "displayname": "anhduy1202",
      "fullname": "Daniel Truong",
      "picture": "https://avatars.githubusercontent.com/u/58461444?u=000cf71dd3ba84e38fba82bddc0618e8787fa911&v=4"
    }
  }
]
